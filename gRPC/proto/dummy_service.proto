syntax = "proto3";
package dummyservice;

option go_package = "dummysports/service";

service DummyService {
  rpc CreateGroup(Grouping) returns (Group) {} // will need a way to add to a group.

  rpc PlaceWager(Wager) returns (WagerResult) {} // might need to get more generic.
}

message Grouping {
  repeated uint32 people = 1 [packed=true];
}

message Group {
  uint32 id = 1;
}

message WagerResult {
  int32 winnings = 1; //The return of the wager: could be positive or negative. 
}

message Wager {
  repeated uint32 topics = 1;  // To get the multiplier for each wager, we should store a number in each topic and figure out an
                               // algorithm that considers the likelihood of each topic hitting. Each topic will have a unique ID,
                               // liklihood, . Each line will have two topics associated with them - one for the over, one for the under.
  uint32 amount = 2;
  uint32 user = 3;
}